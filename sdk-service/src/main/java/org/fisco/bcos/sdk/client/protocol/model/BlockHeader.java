// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.7.2.
// **********************************************************************

package org.fisco.bcos.sdk.client.protocol.model;

import com.qq.tars.protocol.tars.TarsInputStream;
import com.qq.tars.protocol.tars.TarsOutputStream;
import com.qq.tars.protocol.tars.annotation.TarsStruct;
import com.qq.tars.protocol.tars.annotation.TarsStructProperty;
import com.qq.tars.protocol.util.TarsUtil;

@TarsStruct
public class BlockHeader {

    @TarsStructProperty(order = 2, isRequire = true)
    public int version = 0;

    @TarsStructProperty(order = 3, isRequire = true)
    public java.util.List<ParentInfo> parentInfo = null;

    @TarsStructProperty(order = 4, isRequire = true)
    public byte[] txsRoot = null;

    @TarsStructProperty(order = 5, isRequire = true)
    public byte[] receiptRoot = null;

    @TarsStructProperty(order = 6, isRequire = true)
    public byte[] stateRoot = null;

    @TarsStructProperty(order = 7, isRequire = true)
    public long blockNumber = 0L;

    @TarsStructProperty(order = 8, isRequire = true)
    public String gasUsed = "";

    @TarsStructProperty(order = 9, isRequire = true)
    public long timestamp = 0L;

    @TarsStructProperty(order = 10, isRequire = true)
    public long sealer = 0L;

    @TarsStructProperty(order = 11, isRequire = true)
    public java.util.List<byte[]> sealerList = null;

    @TarsStructProperty(order = 12, isRequire = true)
    public byte[] extraData = null;

    @TarsStructProperty(order = 13, isRequire = true)
    public java.util.List<Signature> signatureList = null;

    @TarsStructProperty(order = 14, isRequire = true)
    public java.util.List<java.lang.Long> consensusWeights = null;

    public int getVersion() {
        return this.version;
    }

    public void setVersion(int version) {
        this.version = version;
    }

    public java.util.List<ParentInfo> getParentInfo() {
        return this.parentInfo;
    }

    public void setParentInfo(java.util.List<ParentInfo> parentInfo) {
        this.parentInfo = parentInfo;
    }

    public byte[] getTxsRoot() {
        return this.txsRoot;
    }

    public void setTxsRoot(byte[] txsRoot) {
        this.txsRoot = txsRoot;
    }

    public byte[] getReceiptRoot() {
        return this.receiptRoot;
    }

    public void setReceiptRoot(byte[] receiptRoot) {
        this.receiptRoot = receiptRoot;
    }

    public byte[] getStateRoot() {
        return this.stateRoot;
    }

    public void setStateRoot(byte[] stateRoot) {
        this.stateRoot = stateRoot;
    }

    public long getBlockNumber() {
        return this.blockNumber;
    }

    public void setBlockNumber(long blockNumber) {
        this.blockNumber = blockNumber;
    }

    public String getGasUsed() {
        return this.gasUsed;
    }

    public void setGasUsed(String gasUsed) {
        this.gasUsed = gasUsed;
    }

    public long getTimestamp() {
        return this.timestamp;
    }

    public void setTimestamp(long timestamp) {
        this.timestamp = timestamp;
    }

    public long getSealer() {
        return this.sealer;
    }

    public void setSealer(long sealer) {
        this.sealer = sealer;
    }

    public java.util.List<byte[]> getSealerList() {
        return this.sealerList;
    }

    public void setSealerList(java.util.List<byte[]> sealerList) {
        this.sealerList = sealerList;
    }

    public byte[] getExtraData() {
        return this.extraData;
    }

    public void setExtraData(byte[] extraData) {
        this.extraData = extraData;
    }

    public java.util.List<Signature> getSignatureList() {
        return this.signatureList;
    }

    public void setSignatureList(java.util.List<Signature> signatureList) {
        this.signatureList = signatureList;
    }

    public java.util.List<java.lang.Long> getConsensusWeights() {
        return this.consensusWeights;
    }

    public void setConsensusWeights(java.util.List<java.lang.Long> consensusWeights) {
        this.consensusWeights = consensusWeights;
    }

    public BlockHeader() {}

    public BlockHeader(
            int version,
            java.util.List<ParentInfo> parentInfo,
            byte[] txsRoot,
            byte[] receiptRoot,
            byte[] stateRoot,
            long blockNumber,
            String gasUsed,
            long timestamp,
            long sealer,
            java.util.List<byte[]> sealerList,
            byte[] extraData,
            java.util.List<Signature> signatureList,
            java.util.List<java.lang.Long> consensusWeights) {
        this.version = version;
        this.parentInfo = parentInfo;
        this.txsRoot = txsRoot;
        this.receiptRoot = receiptRoot;
        this.stateRoot = stateRoot;
        this.blockNumber = blockNumber;
        this.gasUsed = gasUsed;
        this.timestamp = timestamp;
        this.sealer = sealer;
        this.sealerList = sealerList;
        this.extraData = extraData;
        this.signatureList = signatureList;
        this.consensusWeights = consensusWeights;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + TarsUtil.hashCode(this.version);
        result = prime * result + TarsUtil.hashCode(this.parentInfo);
        result = prime * result + TarsUtil.hashCode(this.txsRoot);
        result = prime * result + TarsUtil.hashCode(this.receiptRoot);
        result = prime * result + TarsUtil.hashCode(this.stateRoot);
        result = prime * result + TarsUtil.hashCode(this.blockNumber);
        result = prime * result + TarsUtil.hashCode(this.gasUsed);
        result = prime * result + TarsUtil.hashCode(this.timestamp);
        result = prime * result + TarsUtil.hashCode(this.sealer);
        result = prime * result + TarsUtil.hashCode(this.sealerList);
        result = prime * result + TarsUtil.hashCode(this.extraData);
        result = prime * result + TarsUtil.hashCode(this.signatureList);
        result = prime * result + TarsUtil.hashCode(this.consensusWeights);
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof BlockHeader)) {
            return false;
        }
        BlockHeader other = (BlockHeader) obj;
        return (TarsUtil.equals(this.version, other.version)
                && TarsUtil.equals(this.parentInfo, other.parentInfo)
                && TarsUtil.equals(this.txsRoot, other.txsRoot)
                && TarsUtil.equals(this.receiptRoot, other.receiptRoot)
                && TarsUtil.equals(this.stateRoot, other.stateRoot)
                && TarsUtil.equals(this.blockNumber, other.blockNumber)
                && TarsUtil.equals(this.gasUsed, other.gasUsed)
                && TarsUtil.equals(this.timestamp, other.timestamp)
                && TarsUtil.equals(this.sealer, other.sealer)
                && TarsUtil.equals(this.sealerList, other.sealerList)
                && TarsUtil.equals(this.extraData, other.extraData)
                && TarsUtil.equals(this.signatureList, other.signatureList)
                && TarsUtil.equals(this.consensusWeights, other.consensusWeights));
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BlockHeader(");
        sb.append("version:");
        sb.append(this.version);
        sb.append(", ");
        sb.append("parentInfo:");
        if (this.parentInfo == null) {
            sb.append("null");
        } else {
            sb.append(this.parentInfo);
        }
        sb.append(", ");
        sb.append("txsRoot:");
        if (this.txsRoot == null) {
            sb.append("null");
        } else {
            sb.append(this.txsRoot);
        }
        sb.append(", ");
        sb.append("receiptRoot:");
        if (this.receiptRoot == null) {
            sb.append("null");
        } else {
            sb.append(this.receiptRoot);
        }
        sb.append(", ");
        sb.append("stateRoot:");
        if (this.stateRoot == null) {
            sb.append("null");
        } else {
            sb.append(this.stateRoot);
        }
        sb.append(", ");
        sb.append("blockNumber:");
        sb.append(this.blockNumber);
        sb.append(", ");
        sb.append("gasUsed:");
        if (this.gasUsed == null) {
            sb.append("null");
        } else {
            sb.append(this.gasUsed);
        }
        sb.append(", ");
        sb.append("timestamp:");
        sb.append(this.timestamp);
        sb.append(", ");
        sb.append("sealer:");
        sb.append(this.sealer);
        sb.append(", ");
        sb.append("sealerList:");
        if (this.sealerList == null) {
            sb.append("null");
        } else {
            sb.append(this.sealerList);
        }
        sb.append(", ");
        sb.append("extraData:");
        if (this.extraData == null) {
            sb.append("null");
        } else {
            sb.append(this.extraData);
        }
        sb.append(", ");
        sb.append("signatureList:");
        if (this.signatureList == null) {
            sb.append("null");
        } else {
            sb.append(this.signatureList);
        }
        sb.append(", ");
        sb.append("consensusWeights:");
        if (this.consensusWeights == null) {
            sb.append("null");
        } else {
            sb.append(this.consensusWeights);
        }
        sb.append(")");
        return sb.toString();
    }

    public void writeTo(TarsOutputStream _os) {
        _os.write(this.version, 2);
        _os.write(this.parentInfo, 3);
        _os.write(this.txsRoot, 4);
        _os.write(this.receiptRoot, 5);
        _os.write(this.stateRoot, 6);
        _os.write(this.blockNumber, 7);
        _os.write(this.gasUsed, 8);
        _os.write(this.timestamp, 9);
        _os.write(this.sealer, 10);
        _os.write(this.sealerList, 11);
        _os.write(this.extraData, 12);
        _os.write(this.signatureList, 13);
        _os.write(this.consensusWeights, 14);
    }

    static java.util.List<ParentInfo> cache_parentInfo;

    static {
        cache_parentInfo = new java.util.ArrayList<ParentInfo>();
        ParentInfo var_7 = new ParentInfo();
        cache_parentInfo.add(var_7);
    }

    static byte[] cache_txsRoot;

    static {
        cache_txsRoot = new byte[1];
        byte var_8 = (byte) 0;
        cache_txsRoot[0] = var_8;
    }

    static byte[] cache_receiptRoot;

    static {
        cache_receiptRoot = new byte[1];
        byte var_9 = (byte) 0;
        cache_receiptRoot[0] = var_9;
    }

    static byte[] cache_stateRoot;

    static {
        cache_stateRoot = new byte[1];
        byte var_10 = (byte) 0;
        cache_stateRoot[0] = var_10;
    }

    static java.util.List<byte[]> cache_sealerList;

    static {
        cache_sealerList = new java.util.ArrayList<byte[]>();
        byte[] var_11 = new byte[1];
        byte var_12 = (byte) 0;
        var_11[0] = var_12;
        cache_sealerList.add(var_11);
    }

    static byte[] cache_extraData;

    static {
        cache_extraData = new byte[1];
        byte var_13 = (byte) 0;
        cache_extraData[0] = var_13;
    }

    static java.util.List<Signature> cache_signatureList;

    static {
        cache_signatureList = new java.util.ArrayList<Signature>();
        Signature var_14 = new Signature();
        cache_signatureList.add(var_14);
    }

    static java.util.List<java.lang.Long> cache_consensusWeights;

    static {
        cache_consensusWeights = new java.util.ArrayList<java.lang.Long>();
        long var_15 = 0L;
        cache_consensusWeights.add(var_15);
    }

    public void readFrom(TarsInputStream _is) {
        this.version = _is.read(this.version, 2, true);
        this.parentInfo = (java.util.List<ParentInfo>) _is.read(cache_parentInfo, 3, true);
        this.txsRoot = (byte[]) _is.read(cache_txsRoot, 4, true);
        this.receiptRoot = (byte[]) _is.read(cache_receiptRoot, 5, true);
        this.stateRoot = (byte[]) _is.read(cache_stateRoot, 6, true);
        this.blockNumber = _is.read(this.blockNumber, 7, true);
        this.gasUsed = _is.readString(8, true);
        this.timestamp = _is.read(this.timestamp, 9, true);
        this.sealer = _is.read(this.sealer, 10, true);
        this.sealerList = (java.util.List<byte[]>) _is.read(cache_sealerList, 11, true);
        this.extraData = (byte[]) _is.read(cache_extraData, 12, true);
        this.signatureList = (java.util.List<Signature>) _is.read(cache_signatureList, 13, true);
        this.consensusWeights =
                (java.util.List<java.lang.Long>) _is.read(cache_consensusWeights, 14, true);
    }
}
